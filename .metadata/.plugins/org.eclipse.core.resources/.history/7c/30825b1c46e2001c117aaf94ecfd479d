
import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;
import java.sql.*;
import javax.naming.*;
import javax.sql.*;

import minedemo.Interview;
import minedemo.InterviewDao;



public class InterViewServletDS extends HttpServlet {
  public void doGet(HttpServletRequest request, HttpServletResponse response)
                    throws ServletException, IOException {
    
	DataSource ds = null;
    InitialContext ctxt = null;
    Connection conn = null;
    
    
    try {
     
      //建立Context Object,連到JNDI Server
      ctxt = new InitialContext();

      //使用JNDI API找到DataSource
      ds = ( DataSource ) ctxt.lookup("java:comp/env/jdbc/EmployeeDB");
     
      //向DataSource要Connection
      conn = ds.getConnection();

      //建立Database Access Object,負責Table的Access
      InterviewDao interviewDao = new InterviewDao(conn);
//      Interview InterviewData = (Interview)request.getSession(true).getAttribute("reg_Interview");
      //如果要編碼值為UTF-8
     request.setCharacterEncoding("UTF-8");

      if (request.getParameter("QUERY") != null) {
        processQuery(request,response,interviewDao);
      } 

      if (request.getParameter("INSERT") != null) {
    	  gotoSubmitProcess(request,response,interviewDao);
      } 
      if (request.getParameter("DELETE") != null) {
    	  gotoSubmitProcess(request,response,interviewDao);
      } 
    } catch (NamingException ne) {
      System.out.println("Naming Service Lookup Exception");  
    } catch (SQLException e) {
      System.out.println("Database Connection Error"); 
    } finally {
      try {
        if (conn != null) conn.close();
      } catch (Exception e) {
        System.out.println("Connection Pool Error!");
      }
    }
  }

 /* private void processUpdate(HttpServletRequest request,
                             HttpServletResponse response,
                             InterviewDao interviewDao) throws SQLException, IOException {
    String comp_Name = request.getParameter("comp_Name");
    String USER_ID = request.getParameter("USER_ID");
    
    Interview interview = interviewDao.findInterview(comp_Name);
    if (interview == null) showError(response, " can not find this comp_Name" + comp_Name);
    else {
      interview.setUSER_ID(USER_ID);
      if (interviewDao.updateDept(interview)) showForm(response,interview);
      else showError(response," update failure");
    }
  }
*/
  public void gotoSubmitProcess(HttpServletRequest request, HttpServletResponse response,InterviewDao interviewDao) throws ServletException, IOException
  {//輸入資料
	   String createdTime;
	     String intTime;
	     String compName;
	     String jobName;
	     String offer;
	     String test;
	     
	     String qA;
	     String share;
	     
	     String compScore;
	     String uSERID;
   
	     createdTime = request.getParameter("Created_Time").trim();
	     intTime = request.getParameter("Int_Time").trim();
	     compName = request.getParameter("Comp_Name").trim();
	     jobName = request.getParameter("Job_Name").trim();
	     offer = request.getParameter("Offer").trim();
	     test = request.getParameter("Test").trim();
	    qA = request.getParameter("QA").trim();
	     share = request.getParameter("Share").trim();
	     compScore = request.getParameter("Comp_Score").trim();
	     uSERID = request.getParameter("USER_ID").trim();
	     Interview interview = new Interview(createdTime, intTime, compName, jobName, offer, test, Languag q QA, share, Int_Score, compScore, uSERID);
	    interviewDao.createInterview(interview);
	    System.out.println("新增成功");
	    if(interview!=null)showForm(response, interview);
	     /*request.getSession(true).setAttribute("reg_Interview",reg_Interview);*/
   /* request.getRequestDispatcher("/DisplayStudent.jsp").forward(request,response);*/
  }
  
  private void processQuery(HttpServletRequest request, 
                            HttpServletResponse response,
                            InterviewDao interviewDao) throws SQLException,IOException {
	  String Comp_Name;
	  //讀取部門代號
	  Comp_Name = request.getParameter("Comp_Name");

    //透過DAO元件Access interview Table
	  InterviewDao findDao=new InterviewDao();
	  Interview interview = interviewDao.findInterview(Comp_Name);
    if (interview == null) showError(response, " can not find this comp_Name" + Comp_Name);
    else              showForm(response, interview);

  }

  private void showError(HttpServletResponse response, String message)
                  throws IOException  {
    PrintWriter out = response.getWriter();
    out.println("<HTML>");
    out.println("<HEAD>");
    out.println("<TITLE>Interview Form</TITLE>");
    out.println("</HEAD>");
    out.println("<BODY BGCOLOR='#FDF5E6'>");
    out.println("message:"+ message);                  
    out.println("</BODY>");
    out.println("</HTML>");  
    out.close();
  }

  private void showForm(HttpServletResponse response, Interview interview)
                  throws IOException  {
	  
    response.setContentType("text/html;charset=UTF-8");              
    PrintWriter out = response.getWriter();
    out.println("<HTML>");
    out.println("<HEAD>");
    out.println("<TITLE>Interview Form</TITLE>");
    out.println("</HEAD>");
    out.println("<BODY BGCOLOR='#FDF5E6'>");
    out.println("<H1 ALIGN='CENTER'>Interview Form</H1>");                  
    out.println("<FORM ACTION='./InterViewServletDS'>");
    
    out.println(" CV_NO  :  "+interview.getCv_No());
    out.println(" Created_Time  :  <INPUT TYPE='TEXT' NAME='Created_Time' VALUE='"+interview.getCreated_Time()+"'><BR>");
    out.println(" Int_Time  :  <INPUT TYPE='TEXT' NAME='Int_Time' VALUE='"+interview.getInt_Time()+"'><BR>");
    out.println(" Comp_Name  :  <INPUT TYPE='TEXT' NAME='Comp_Name' VALUE='"+interview.getComp_Name()+"'><BR>");
    out.println(" Job_Name  :  <INPUT TYPE='TEXT' NAME='Job_Name' VALUE='"+interview.getJob_Name()+"'><BR>");
    out.println(" Offer  :  <INPUT TYPE='TEXT' NAME='Offer' VALUE='"+interview.getOffer()+"'><BR>");
    out.println(" Test  :  <INPUT TYPE='TEXT' NAME='Test' VALUE='"+interview.getTest()+"'><BR>");
    out.println(" Language  :  <INPUT TYPE='TEXT' NAME='Language' VALUE='"+interview.getLanguage()+"'><BR>");
    out.println(" QA  :  <INPUT TYPE='TEXT' NAME='QA' VALUE='"+interview.getQA()+"'><BR>");
    out.println(" Share  :  <INPUT TYPE='TEXT' NAME='Share' VALUE='"+interview.getShare()+"'><BR>");
    out.println(" Int_Score  :  <INPUT TYPE='TEXT' NAME='Int_Score' VALUE='"+interview.getInt_Score()+"'><BR>");
    out.println(" Comp_Score  :  <INPUT TYPE='TEXT' NAME='Comp_Score' VALUE='"+interview.getComp_Score()+"'><BR>");
    out.println(" USER_ID  :  <INPUT TYPE='TEXT' NAME='USER_ID' VALUE='"+interview.getUSER_ID()+"'><BR>");
    out.println("  <CENTER>");
    out.println("<INPUT NAME='QUERY'  TYPE='SUBMIT' VALUE='QUERY'>");
    out.println("<INPUT NAME='UPDATE' TYPE='SUBMIT' VALUE='UPDATE'>");
    out.println("</CENTER>");
    out.println("</FORM>");
    out.println("</BODY>");
    out.println("</HTML>");  
    out.close();
  }

}